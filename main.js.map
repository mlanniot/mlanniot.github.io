{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blue-colored.directive.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1 blueColored>Hello World!</h1>\\n</div>\\n\\n<div *ngIf=\\\"visible\\\">Show this if!?</div>\\n<button (click)=\\\"toggleDiv()\\\">Toggle</button>\\n<br>\\n<div *ngIf=\\\"visibleOddEven;then oddClicked else evenClicked\\\">Show this if!?</div>\\n<button (click)=\\\"toggleDivOddEven()\\\">ToggleOddEven</button>\\n\\n<ng-template #oddClicked>Odd number of clicks</ng-template>\\n<ng-template #evenClicked>Even number of clicks</ng-template>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  visible = true;\n  visibleOddEven =true;\n\n  toggleDiv(){\n    this.visible=!this.visible;\n  }\n\n  toggleDivOddEven(){\n    this.visibleOddEven=!this.visibleOddEven;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BlueColoredDirective } from './blue-colored.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BlueColoredDirective\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[blueColored]'\n})\nexport class BlueColoredDirective {\n\n  constructor(element: ElementRef) { \n    element.nativeElement.style.color = \"blue\";\n  }\n  @HostListener('click') doSomething() {\n    alert('It Works!');\n  }\n\n  @HostListener('mouseenter') doSomethingElse() {\n    console.log('Mouse just entered the Header');\n  }\n\n  @HostListener('mouseleave') doSomethingElseElse() {\n    console.log('Mouse just leaved the Header');\n  }\n\n  @HostListener('document:click',['$event'])\n    elemClick(elem){\n      console.log('clicked',elem);\n    }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  header works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}